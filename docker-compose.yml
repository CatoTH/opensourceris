version: '3'
services:
  django:
    image: konstin2/meine-stadt-transparent
    build: .
    container_name: django
    volumes:
      - django_static:/static
      - django_config:/config
    networks:
      - network

  mariadb:
    image: mariadb:10
    container_name: mariadb
    volumes:
      - mariadb_data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=meinestadttransparent
      - MYSQL_USER=meinestadttransparent
      - MYSQL_PASSWORD=meinestadttransparent
      - MYSQL_RANDOM_ROOT_PASSWORD=true
    networks:
      - network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.13
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
    ulimits: # Elasticsearch needs those
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - network

  nginx:
    image: nginx
    container_name: nginx
    volumes:
     - django_static:/static:ro
     - minio_data:/minio_data:ro
     - ./etc/nginx-docker-compose.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
     - "7000:80"
    networks:
      - network

  minio:
      image: minio/minio
      networks:
        - network
      volumes:
        - minio_data:/minio_data
      environment:
        # TODO: Do we need proper docker secrets here or is this good enough due to nginx proxying
        MINIO_ACCESS_KEY: meinestadttransparent
        MINIO_SECRET_KEY: meinestadttransparent
      command: server /minio_data

volumes:
  django_static:
  mariadb_data:
  elasticsearch_data:
  minio_data:
  django_config: # Mount that volume into a folder following the readme

networks:
  network:
